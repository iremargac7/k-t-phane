
package login;

import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.awt.List;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.table.DefaultTableModel;


public class Form2 extends javax.swing.JFrame {

    /**
     * Creates new form Form2
     */

    public Form2() throws ClassNotFoundException, SQLException {
        
        this.setTitle("Kütüphane Otomasyonu.");
        this.getContentPane().setBackground( Color.GRAY );
        this.setLocation(500, 100);
        initComponents();
        String[] basliklar = {"Kitabın Adı","Yazarı","Türü","Kitap Kodu"};
        
            int dizi_boyu = 0;
            int dizi_boyu2 = 0;
        
            Connection conn = Database.baglan();
            String sayi = "SELECT Count(*) FROM Kitaplar";
            
            
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sayi);
            while (rs.next()) {
                dizi_boyu = rs.getInt(1);
            }
            
                String[] kitapAd = new String[dizi_boyu];
                String[] Yazar = new String[dizi_boyu];
                String[] Tür = new String[dizi_boyu];
                String[] adet = new String[dizi_boyu];
            
            String query = "SELECT * FROM Kitaplar";
            Statement st2 = conn.createStatement();
            ResultSet rs2 = st2.executeQuery(query);
            int i = 0;
            while (rs2.next()) {
                kitapAd[i]= rs2.getString("ad");
                Yazar[i] = rs2.getString("yazar");
                Tür[i] = rs2.getString("tür");
                adet[i] = rs2.getString("id");
                
                i++;
            }
            String sayi2 = "SELECT Count(*) FROM İliski WHERE username='"+Form1.girilenKullanici+"'";
            
            Statement st3 = conn.createStatement();
            ResultSet rs3 = st3.executeQuery(sayi2);
            while (rs3.next()) {
                dizi_boyu2 = rs3.getInt(1);
            }
            
            String[] kitapAd2 = new String[dizi_boyu2];
            String[] Yazar2 = new String[dizi_boyu2];
            String[] Tür2 = new String[dizi_boyu2];
            String[] kod = new String[dizi_boyu2];
            
            String query2 = "SELECT * FROM İliski WHERE username='"+Form1.girilenKullanici+"'";
            Statement st4 = conn.createStatement();
            ResultSet rs4 = st4.executeQuery(query2);
            int l = 0;
            while (rs4.next()) {
                kitapAd2[l]= rs4.getString("kitapad");
                Yazar2[l] = rs4.getString("yazar");
                Tür2[l] = rs4.getString("tür");
                kod[l] = rs4.getString("kitapid");
                l++;
            }
            
            String[][] veriler2 = new String[dizi_boyu2][4];
            for (int j = 0; j < dizi_boyu2; j++) {
                veriler2[j][0] = kitapAd2[j];
                veriler2[j][1] = Yazar2[j];
                veriler2[j][2] = Tür2[j];
                veriler2[j][3] = kod[j];
            }
            
            
            String[][] veriler = new String[dizi_boyu][4];
            String[] basliklar2 = {"Kitabın Adı","Yazarı","Türü","Kitap Kodu"};
            
            DefaultTableModel model2 = new DefaultTableModel(veriler2, basliklar2);
            
            jTable2.setModel(model2);
                    int sayac = 0;
            for (int j = 0; j < dizi_boyu; j++) {
                veriler[j][0] = kitapAd[j];
                veriler[j][1] = Yazar[j];
                veriler[j][2] = Tür[j];
                veriler[j][3] = adet[j];
            }
        DefaultTableModel model = new DefaultTableModel(veriler, basliklar);
        jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(240, 255, 250));
        jButton1.setText("Seçilen Kitabı Al");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Alabileceğiniz Kitaplar");

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Elinizde Bulunan Kitaplar");

        jButton2.setBackground(new java.awt.Color(240, 250, 251));
        jButton2.setText("Seçilen Kitabı İade Et");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("Giriş Sayfası");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                geriDon(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Kullanıcı İşlemleri");

        jMenuItem1.setText("Şifre Değiştir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Mevcut kullanıcıyı sil");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(270, 270, 270))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(215, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void geriDon(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_geriDon
        Form1 f1 = new Form1();
        f1.setLocationRelativeTo(null);
        f1.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_geriDon

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        SifreDegistir s1 = new SifreDegistir();
        s1.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        KullanıcıSil k1 = new KullanıcıSil();
        k1.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int row = jTable1.getSelectedRow()+1;
        try {
            

            Connection conn = Database.baglan();
            String query = "SELECT * FROM Kitaplar WHERE id="+Integer.toString(row)+";";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            String[] dizi = new String[4];
            String id ="";
            String ad ="";
            String tür ="";
            String yazar = "";
            while (rs.next()) {
                dizi[0] = rs.getString("ad");
                dizi[1] = rs.getString("yazar");
                dizi[2] = rs.getString("tür");
                dizi[3] = rs.getString("id");
                id = rs.getString("id");
                ad = rs.getString("ad");
                yazar = rs.getString("yazar");
                tür = rs.getString("tür");
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                model.addRow(new Object[]{dizi[0], dizi[1], dizi[2], dizi[3]});
            }
            String insert = "INSERT INTO iliski (username, kitapid, kitapad, tür, yazar) VALUES ('"+Form1.girilenKullanici+"', '"+id+"', '"+ad+"', '"+tür+"', '"+yazar+"')";
            Statement st2 = conn.createStatement();
            st2.executeUpdate(insert);
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Form2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Form2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        int row = jTable2.getSelectedRow();
        String id =jTable2.getValueAt(row, 3).toString();
        System.out.println(id);
        
        
        
        
        try {
            Connection connect = Database.baglan();
            String query = "delete from İliski Where kitapid='"+id+"' AND username='"+Form1.girilenKullanici+"'";
            Statement st = connect.createStatement();
            st.execute(query);
            
            ((DefaultTableModel)jTable2.getModel()).removeRow(row);
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Form2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Form2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Form2().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Form2.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Form2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
